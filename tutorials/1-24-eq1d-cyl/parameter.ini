!==== 112 xy
!DEFVAR=(INT):    i0  =  4   ! no. elems in inner square  i0xi0
!DEFVAR=(INT):    ir1 =  2   ! no. elems in r for first ring 
!DEFVAR=(INT):    ir2 =  2   ! no. elems in r for second ring
!DEFVAR=(INT):    ir3 =  2   ! no. elems in r for second ring
!DEFVAR=(INT):    ixy =112   ! =(i0 + 4*(ir1+ir2+ir3))*i0
!DEFVAR=(REAL):   f1 = 1.0    ! stretching factor in first ring
!DEFVAR=(REAL):   f2 = 1.0   ! stretching factor in second ring
!DEFVAR=(REAL):   f3 = 1.0   ! stretching factor in second ring
!==== 448 xy
DEFVAR=(INT):    i0  =  8   ! no. elems in inner square  i0xi0
DEFVAR=(INT):    ir1 =  4   ! no. elems in r for first ring 
DEFVAR=(INT):    ir2 =  4   ! no. elems in r for second ring
DEFVAR=(INT):    ir3 =  4   ! no. elems in r for second ring
DEFVAR=(INT):    ixy =448   ! =(i0 + 4*(ir1+ir2+ir3))*i0
DEFVAR=(REAL):   f1 = 1.0    ! stretching factor in first ring
DEFVAR=(REAL):   f2 = 1.0   ! stretching factor in second ring
DEFVAR=(REAL):   f3 = 1.0   ! stretching factor in second ring
!==== 832 xy
!DEFVAR=(INT):    i0  =  8   ! no. elems in inner square  i0xi0
!DEFVAR=(INT):    ir1 =  8   ! no. elems in r for first ring 
!DEFVAR=(INT):    ir2 =  8   ! no. elems in r for second ring
!DEFVAR=(INT):    ir3 =  8   ! no. elems in r for second ring
!DEFVAR=(INT):    ixy =832   ! =(i0 + 4*(ir1+ir2+ir3))*i0
!DEFVAR=(REAL):   f1 = 1.0    ! stretching factor in first ring
!DEFVAR=(REAL):   f2 = 1.0   ! stretching factor in second ring
!DEFVAR=(REAL):   f3 = 1.0   ! stretching factor in second ring
!==== 2560 xy
!DEFVAR=(INT):    i0  = 16   ! no. elems in inner square  i0xi0
!DEFVAR=(INT):    ir1 = 12   ! no. elems in r for first ring 
!DEFVAR=(INT):    ir2 = 12   ! no. elems in r for second ring
!DEFVAR=(INT):    ir3 = 12   ! no. elems in r for second ring
!DEFVAR=(INT):    ixy =2560  ! =(i0 + 4*(ir1+ir2+ir3))*i0
!DEFVAR=(REAL):   f1 = 1.0    ! stretching factor in first ring
!DEFVAR=(REAL):   f2 = 1.0   ! stretching factor in second ring
!DEFVAR=(REAL):   f3 = 1.0   ! stretching factor in second ring
!==== 
DEFVAR=(INT):    iz = 001   ! no. elems in z
DEFVAR=(REAL):   ri = 0.5   ! inner square dim
DEFVAR=(REAL):   rr0 = 1.0  ! middle square dim
DEFVAR=(REAL):   rr1 = 1.75  ! middle square dim
DEFVAR=(REAL):   rr2 = 2.5     ! outer square dim
DEFVAR=(REAL):   sr0 = 0.4   ! = 1/rr2 
DEFVAR=(REAL):   lz = 20.   ! length of domain in z
!================================================================================================================================= !
! OUTPUT
!================================================================================================================================= !
  ProjectName  = CYLINDER_EQTOK0_Ngeo4_ixy_iz
  Debugvisu    = T                          ! Visualize mesh and boundary conditions (tecplot ascii)
    DebugVisuLevel = 2
    Nvisu = 5
  checkElemJacobians=T
  sfc_type= mortonZ   ! morton,hilbert, mortonZ,hilbertZ
  sfc_boundbox = 1   ! bounding box for SFC, 1: each direction separately (good for cart boxes), 2: isotropic box size
orientZ=T
doSortijk=T
OutputNodeType=GAUSS-LOBATTO
!OutputNodeType=EQUIDISTANT
!================================================================================================================================= !
! MESH
!================================================================================================================================= !
  useCurveds   =T 
  BoundaryOrder=5                         
  InnerElemStretch=T

  Mode         =1                           ! Mode for Cartesian boxes
  nZones       =13                           ! number of boxes
  !center
  Corner       =(/-ri,-ri,0. ,,ri,-ri,0. ,,ri,ri,0. ,,  -ri,ri,0.,, -ri,-ri,1. ,,ri,-ri,1. ,,ri,ri,1. ,,  -ri,ri,1. /)
  nElems       =(/i0,i0,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/1.,1.,1./)                ! stretching
  !left inner
  Corner       =(/-rr0,-rr0,0. ,,-ri,-ri,0. ,,-ri,ri,0. ,,  -rr0,rr0,0.,, -rr0,-rr0,1. ,,-ri,-ri,1. ,,-ri,ri,1. ,,  -rr0,rr0,1. /)
  nElems       =(/ir1,i0,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/f1,1.,1./)                ! stretching
  !right inner
  Corner       =(/ri,-ri,0. ,,rr0,-rr0,0. ,,rr0,rr0,0. ,,  ri,ri,0.,, ri,-ri,1. ,,rr0,-rr0,1. ,,rr0,rr0,1. ,,  ri,ri,1. /)
  nElems       =(/ir1,i0,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/-f1,1.,1./)                ! stretching
  !upper inner
  Corner       =(/-ri,ri,0. ,,ri,ri,0. ,,rr0,rr0,0. ,,  -rr0,rr0,0.,, -ri,ri,1. ,,ri,ri,1. ,,rr0,rr0,1. ,,  -rr0,rr0,1. /)
  nElems       =(/i0,ir1,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/1.,-f1,1./)                ! stretching
  !lower inner
  Corner       =(/-rr0,-rr0,0. ,,rr0,-rr0,0. ,,ri,-ri,0. ,,  -ri,-ri,0.,, -rr0,-rr0,1. ,,rr0,-rr0,1. ,,ri,-ri,1. ,,  -ri,-ri,1. /)
  nElems       =(/i0,ir1,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/1.,f1,1./)                ! stretching
  !left middle
  Corner       =(/-rr1,-rr1,0. ,,-rr0,-rr0,0. ,,-rr0,rr0,0. ,,  -rr1,rr1,0.,, -rr1,-rr1,1. ,,-rr0,-rr0,1. ,,-rr0,rr0,1. ,,  -rr1,rr1,1. /)
  nElems       =(/ir2,i0,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/f2,1.,1./)                ! stretching
  !right middle
  Corner       =(/rr0,-rr0,0. ,,rr1,-rr1,0. ,,rr1,rr1,0. ,,  rr0,rr0,0.,, rr0,-rr0,1. ,,rr1,-rr1,1. ,,rr1,rr1,1. ,,  rr0,rr0,1. /)
  nElems       =(/ir2,i0,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/-f2,1.,1./)                ! stretching
  !upper middle
  Corner       =(/-rr0,rr0,0. ,,rr0,rr0,0. ,,rr1,rr1,0. ,,  -rr1,rr1,0.,, -rr0,rr0,1. ,,rr0,rr0,1. ,,rr1,rr1,1. ,,  -rr1,rr1,1. /)
  nElems       =(/i0,ir2,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/1.,-f2,1./)                ! stretching
  !lower middle
  Corner       =(/-rr1,-rr1,0. ,,rr1,-rr1,0. ,,rr0,-rr0,0. ,,  -rr0,-rr0,0.,, -rr1,-rr1,1. ,,rr1,-rr1,1. ,,rr0,-rr0,1. ,,  -rr0,-rr0,1. /)
  nElems       =(/i0,ir2,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/1.,f2,1./)                ! stretching
  !left
  Corner       =(/-rr2,-rr2,0. ,,-rr1,-rr1,0. ,,-rr1,rr1,0. ,,  -rr2,rr2,0.,, -rr2,-rr2,1. ,,-rr1,-rr1,1. ,,-rr1,rr1,1. ,,  -rr2,rr2,1. /)
  nElems       =(/ir3,i0,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,0,2,3/)             ! Indices of Boundary Conditions
  factor       =(/-f3,1.,1./)              ! stretching
  elemtype     =108                         ! element type (108: Hexahedral)
  !right
  Corner       =(/rr1,-rr1,0. ,,rr2,-rr2,0. ,,rr2,rr2,0. ,,  rr1,rr1,0.,, rr1,-rr1,1. ,,rr2,-rr2,1. ,,rr2,rr2,1. ,,  rr1,rr1,1. /)
  nElems       =(/ir3,i0,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,2,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/f3,1.,1./)              ! stretching
  !upper
  Corner       =(/-rr1,rr1,0. ,,rr1,rr1,0. ,,rr2,rr2,0. ,,  -rr2,rr2,0.,, -rr1,rr1,1. ,,rr1,rr1,1. ,,rr2,rr2,1. ,,  -rr2,rr2,1. /)
  nElems       =(/i0,ir3,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,0,0,2,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/1.,f3,1./)              ! stretching
  !lower
  Corner       =(/-rr2,-rr2,0. ,,rr2,-rr2,0. ,,rr1,-rr1,0. ,,  -rr1,-rr1,0.,, -rr2,-rr2,1. ,,rr2,-rr2,1. ,,rr1,-rr1,1. ,,  -rr1,-rr1,1. /)
  nElems       =(/i0,ir3,iz/)                   ! number of elements in each direction
  BCIndex      =(/1,2,0,0,0,3/)             ! Indices of Boundary Conditions
  elemtype     =108                         ! element type (108: Hexahedral)
  factor       =(/1.,-f3,1./)              ! stretching

!================================================================================================================================= !
! BOUNDARY CONDITIONS
!================================================================================================================================= !
    BoundaryName=BC_zminus                  ! BC index 1 (from  position in parameterfile)
    BoundaryType=(/1,0,0,1/)                ! (/ Type, curveIndex, State, alpha /)
    BoundaryName=BC_outer                  ! BC index 2
    BoundaryType=(/2,1,0,0/) 
    BoundaryName=BC_zplus                   ! BC index 6              
    BoundaryType=(/1,0,0,-1/)
    vv=(/0.,0.,1./)
!================================================================================================================================= !
! MESH POST DEFORM
!================================================================================================================================= !
MeshPostDeform=1
PostDeform_R0=sr0
PostDeform_Lz=lz   
PostDeform_useGL=T
!spaceQuandt=1000.     !for q34 
!postConnect=2         !for q34 !1: reconnect after postdeform, keep periodic sides , 2: make periodic inner sides (torus!)
!postvv=(/0.,0.,0./)   !for q34
!PostDeform_sq=-0.75   !for q34 

whichEquilibrium=4  !cyl1d
!TOK0, constant eta
cyl1d_alpha0=0.625
cyl1d_eta_param=(/1.,1.,0./) !constant
!TOK case from POP2008 paper
!cyl1d_alpha0=0.625
!cyl1d_eta_param=(/24.,4.,1.5/) !constant
!PP case from POP2008 paper
!cyl1d_alpha0=4.
!cyl1d_eta_param=(/20.,10.,1./) !constant
